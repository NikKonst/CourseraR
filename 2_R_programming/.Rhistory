demo()
install.packages("swirl")
packageVersion("swirl")
library(swirl)
swirl()
swirl()
5 + 7
library(KernSmooth )
getwd()
getwd()
getwd()
setwd("~/DataScience/Coursera")
setwd("~/DataScience/Coursera")
getwd()
x <- 1
print(x)
x
msg <- "hello"
msg
x <- 1:20
x
vector("numeric", 11)
vector("character", 11)
vector("characte", 11)
vector("character", 11)
x <- c(0.5, 0.6)
x
x <- c(T, F)
x
x <- c(2+7i, 3+8i)
x
x <- c(TRUE, 4)
x
x <- 0:6
x
as.character(x)
as.complex(x)
x <- list(1, T, "a", 1+7i)
x
x <- list(1, T, "a", "b", 1+7i)
x
x <- matrix(nrow = 2, ncol = 3)
x
x <- matrix(2, 3)
x
x <- matrix(nrow = 2, ncol = 3)
x
dim(x)
attributes(x)
x <- matrix(1:6, 2, 3)
x
m <- 1:10
m
dim(m) <- c(5, 2)
m
x <- 1:3
x
y <- 10:13
cbind(x, y)
y <- 10:12
cbind(x, y)
rbind(x, y)
x <- c(4, TRUE)
x
class(x)
setwd("~/DataScience/Coursera/2_R_programming")
getwd()
x <- factor(c("yes", "yes", "no", "yes", "no"))
table(x)
x
unclass(x)
x
x <- factor(c("yes", "yes", "no", "yes", "no"), levels = c("yes", "no"))
x
table(x)
x <- data.frame(bar=1:4, foo=c(T, T, F, F))
x
nrow(x)
ncol(2)
ncol(x)
x <- list(2, "a", "b", TRUE)
x[[2]]
x
x[[2]]
x <- 1:3
names(x)
names(x) <- c("a", "b", "c")
names(x)
x
names(x) <- c(a, b, c)
x <- list(a=1, b=2, c=3)
x
names(x)
x <- factor(c("yes", "no"))
levels(x)
levels(x) <- c("yes", "no")
levels(x)
table(x)
clear()
clr()
x <- c(3, 5, 1, 10, 12, 6)
x[x <= 5] <- 0
x
x[x %in% 1:5] <- 0
x
x[x %in% 1:6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
data <- read.csv(file="hw1_data.csv")
fetwd()
getwd()
data <- read.csv(file="quiz1_data/hw1_data.csv")
names(data)
sapply(data, class)
y <- data.frame(a = 5, b = "t")
y
dput(y)
dput(y, "testDput.R")
getwd()
t <- dget("testDput.R")
t
x <- "test"
y <- data.frame(a = 9, b = T)
y
dump(c("x", "y"), file = "testDump.R")
rm(x, y)
source("testDump.R")
x
y
x <- c(3, 5, 1, 10, 12, 6)
x[x <= 5] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
x
x
x[x < 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x == 0] < 6
data <- read.csv("quiz1_data/hw1_data.csv")
names(data)
data[0:2]
data[[0:2]]
data[2:6]
nrow(data)
data
data[47, "Ozone"]
is.na(data[,"Ozone"])
is.na(data[,"Ozone"])[false]
data["Ozone"]
x <- data["Ozone"]
x
data.matrix(x)
data
data[47]
data[[47]]
x = c("a", "b", "c", "c", "d", "a")
u <- x > "a"
u
x[u]
x <- list(foo = 1:4, bar = 0.6)
x
x[1]
x[[1]]
data$Ozone
x <- data$Ozone
o <- data$Ozone
o
is.na(o)
l <- is.na(o)
l
n <- l[l == F]
n
n <- l[l == T]
n
length(n)
data[1:2]
data[c(1:2)]
data[c(1,2)]
data[1:2,]
length(data)
length(data[1])
length(data[, 1])
data[length(data[, 1]) - 1:length(data[, 1]),]
data[1:2, ]
m <- matrix(1:6, 2, 3)
m[1, 2]
m[1, 2, drop = F]
data[1:2, ]
data[152:153, ]
data[152:154, ]
data[152:153, ]
data$Ozone[47]
good <- complete.cases(data)
x <- 1:4; y <- 2:3
x+y
x <- 1:4; y <- 2:4
x+y
x <- 1:4; y <- 2:3
x+y
class(x+y)
class(x)
x<-4
class(x)
x <- 1:4
class(x)
x <- c(4, TRUE)
class(x)
x <- 1:4; y <- 2:3
z<-x+y
z
class(z)
data
data$Ozone
ozone <- data$Ozone
bad <- is.na(ozone)
good <- ozone[!bad]
mean(good)
data["Ozon" > 31]
data[["Ozone" > 31]]
data["Ozone" > 31]
data[which(ozone > 31)]
data[which(ozone > 31),]
data[which(ozone > 31 & temp > 90),]
data[which(ozone > 31 & Temp > 90),]
data[which(data$Ozone > 31 & data$Temp > 90),]
data[which(data$Ozone > 31 & data$Temp > 90),]$Solar.R
mean(data[which(data$Ozone > 31 & data$Temp > 90),]$Solar.R)
data[which(data$Month == 6)]
data[which(data$Month == 6), ]
data[which(data$Month == 6), ]$Temp
mean(data[which(data$Month == 6), ]$Temp)
max(data[which(data$Month == 5), ]$Ozone)
max(data[which(data$Month == 5), ]$Ozone[!bad])
bad <- is.na(data[which(data$Month == 5), ]$Ozone)
bad
max(data[which(data$Month == 5), ]$Ozone[!bad])
cube <- function(x, n) {
x^3
}
cube(3)
getwd()
